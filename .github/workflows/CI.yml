name: CI

on:
  push:

jobs:
  desktop-build:
    name: Build-Desktop
    runs-on: ${{ matrix.config.runner }}
    strategy:
      matrix:
        config:
          - { platform: win-x86, runner: ubuntu-latest }
          - { platform: win-x64, runner: ubuntu-latest }
          - { platform: win-arm64, runner: ubuntu-latest }
          - { platform: osx-x64, runner: macos-latest }
          - { platform: osx-arm64, runner: macos-latest }
          - { platform: linux-x64, runner: ubuntu-latest }
          - { platform: linux-arm, runner: ubuntu-latest }
          - { platform: linux-arm64, runner: ubuntu-latest }
          - { platform: linux-musl-x64, runner: ubuntu-latest }
          - { platform: linux-musl-arm, runner: ubuntu-latest }
          - { platform: linux-musl-arm64, runner: ubuntu-latest }
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
      - name: Restore workloads
        run: |
          dotnet workload restore
      - name: Build
        run: |
          dotnet publish LoopMusicPlayer.Desktop -r ${{ matrix.config.platform }} -c Release -o publish --self-contained=true -p:UseAppHost=true -p:PublishSingleFile=true
      - name: Make .app
        if: ${{ startsWith(matrix.config.platform, 'osx') }}
        run: |
          mv publish MacOS
          mv MacOS macOSAppAssets/LoopMusicPlayer/Contents
          mkdir publish
          mv macOSAppAssets/LoopMusicPlayer publish
          mv publish/LoopMusicPlayer publish/LoopMusicPlayer.app
      - name: Rename to AppImage
        if: ${{ startsWith(matrix.config.platform, 'linux') }}
        run: |
          mv publish/LoopMusicPlayer.Desktop publish/LoopMusicPlayer.Desktop.AppImage
      - name : Create Archive
        run: |
          cd publish
          zip LoopMusicPlayer-${{ matrix.config.platform }}.zip -r *
          mv *.zip ..
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        if: ${{ matrix.config.platform != 'win-arm64' && !contains(matrix.config.platform, 'musl') }}
        with:
          name: LoopMusicPlayer-${{ matrix.config.platform }}
          path: ${{ github.workspace }}/*.zip


  android-build:
    name: Build-Android
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
      - name: Restore workloads
        run: |
          dotnet workload restore
      - name: Build
        run: |
          cd ${{ github.workspace }}
          if [ "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" != "" ] then
            echo -n "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > ./release.keystore
            echo "${{ secrets.ANDROID_SIGNING_PASSWORD }}" > AndroidSigningPassword.txt
            dotnet publish LoopMusicPlayer.Android -c Release -p:AndroidKeyStore=true -p:AndroidSigningKeyStore=${{ github.workspace }}/release.keystore -p:AndroidSigningKeyAlias=${{ secrets.ANDROID_KEY_ALIAS }} -p:AndroidSigningKeyPass=file:${{ github.workspace }}/AndroidSigningPassword.txt -p:AndroidSigningStorePass=file:${{ github.workspace }}/AndroidSigningPassword.txt -o publish
          else
            dotnet publish LoopMusicPlayer.Android -c Release -o publish
          fi

      - name : Create Archive
        run: |
          cd publish
          mv *Signed.apk LoopMusicPlayer-android.apk
          mv LoopMusicPlayer-android.apk ..
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: LoopMusicPlayer-android
          path: ${{ github.workspace }}/LoopMusicPlayer-android.apk

  ios-build:
    name: Build-iOS
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'
      - name: Restore workloads
        run: |
          dotnet workload restore
  #     - name: Build
  #       run: |
  #         dotnet publish LoopMusicPlayer.iOS -c Release -o publish
  #     - name : Create Archive
  #       run: |
  #         cd publish
  #         zip LoopMusicPlayer-ios.zip -r *
  #         mv *.zip ..
  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: LoopMusicPlayer-ios
  #         path: ${{ github.workspace }}/*.zip
